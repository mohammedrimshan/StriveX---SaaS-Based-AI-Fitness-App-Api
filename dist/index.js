"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("module-alias/register");
require("reflect-metadata");
require("./frameworks/di/resolver");
require("./frameworks/config/firebase");
const http_1 = require("http");
const server_1 = require("./frameworks/http/server");
const config_1 = require("./shared/config");
const mongoConnect_1 = require("./frameworks/database/mongoDB/mongoConnect");
const tsyringe_1 = require("tsyringe");
const socket_service_1 = require("./interfaceAdapters/services/socket.service");
const video_socket_service_1 = require("./interfaceAdapters/services/video-socket.service");
const notification_service_1 = require("./interfaceAdapters/services/notification.service");
const resolver_1 = require("./frameworks/di/resolver");
const resolver_2 = require("./frameworks/di/resolver");
const chatbot_service_1 = __importDefault(require("./interfaceAdapters/services/chatbot.service"));
require("@/frameworks/queue/bull/handleexpiredinvitations");
const mongoConnect = new mongoConnect_1.MongoConnect();
mongoConnect.connectDB();
const server = new server_1.Server();
const app = server.getApp();
const httpServer = (0, http_1.createServer)(app);
const socketService = tsyringe_1.container.resolve(socket_service_1.SocketService);
const videoSocketService = tsyringe_1.container.resolve(video_socket_service_1.VideoSocketService);
const notificationService = tsyringe_1.container.resolve(notification_service_1.NotificationService);
const chatbotService = tsyringe_1.container.resolve(chatbot_service_1.default);
socketService.initialize(httpServer);
videoSocketService.initialize(httpServer);
chatbotService.handleSocket(socketService.getIO());
resolver_1.subscriptionProcessor.start();
resolver_2.dailyUnusedSessionProcessor.start();
httpServer.listen(config_1.config.server.PORT, () => {
    console.log(`Server running on port ${config_1.config.server.PORT}`);
});
